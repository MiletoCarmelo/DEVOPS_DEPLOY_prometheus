kube-prometheus-stack:
  namespace: monitoring
  prometheusOperator:
    enabled: true
    createCustomResourceDefinitions: true  # Changed to true to ensure CRDs are created
    admissionWebhooks:
      enabled: false  # Disabled to avoid webhook issues
      failurePolicy: Fail  # Changement pour plus de sécurité
      patch:
        enabled: false
    tls:
      enabled: false
    serviceMonitor:
      enabled: true
      selfMonitor: true
      labels:
        app.kubernetes.io/managed-by: prometheus-operator
    serviceAccount:
      annotations:
        "kubectl.kubernetes.io/last-applied-configuration": ""

  prometheus:
    enabled: true
    prometheusSpec:
      serviceMonitorSelector:
        matchLabels:
          app.kubernetes.io/managed-by: prometheus-operator
      ruleSelector:
        matchLabels:
          app.kubernetes.io/managed-by: prometheus-operator
      serviceMonitorNamespaceSelector: {}
      ruleNamespaceSelector: {}
      retention: 15d
      resources:
        requests:
          memory: "256Mi"
          cpu: "100m"
        limits:
          memory: "512Mi"
          cpu: "200m"
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: "local-path"
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi
    serviceAccount:
      annotations:
        "kubectl.kubernetes.io/last-applied-configuration": ""

  prometheus-node-exporter:
    hostNetwork: false  # Désactive hostNetwork pour éviter les conflits de ports
    service:
      port: 9100
      targetPort: 9100

  kubeStateMetrics:
    enabled: true

  grafana:
    enabled: true
    adminPassword: admin  # Remplacer par un secret si nécessaire
    persistence:
      enabled: true
      type: pvc
      size: 10Gi
      storageClassName: "local-path"
      accessModes:
        - ReadWriteOnce
      finalizers:
        - kubernetes.io/pvc-protection
    sidecar:
      dashboards:
        enabled: true
        label: grafana_dashboard
        searchNamespace: ALL
        defaultFolderName: "General"
        provider:
          folder: "General"
    plugins:
      - grafana-piechart-panel
      - grafana-clock-panel
    securityContext:
      runAsUser: 472
      runAsGroup: 472
      fsGroup: 472
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 200m
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - grafana.local
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/enable-admission-webhook: "true"  # Désactive la validation du webhook

# Ajout des versions API pour les CRDs
serviceMonitors:
  kafka:
    enabled: true
    namespace: kafka-dev
    scrapeInterval: 60s
    groupVersion: monitoring.coreos.com/v1
    apiVersion: monitoring.coreos.com/v1

prometheusRules:
  groupVersion: monitoring.coreos.com/v1
  apiVersion: monitoring.coreos.com/v1

kafka:
  lagThreshold: 5000




